- name: Create AWS resources
  hosts: localhost
  connection: local
  gather_facts: False
  
  tasks:
    - name: Create acm cert request
      shell: >
        aws acm request-certificate --domain-name jmtestpage4.jannes.mingram.net
        --validation-method DNS
        --subject-alternative-names www.jmtestpage4.jannes.mingram.net
        --idempotency-token jmtestpage4
        --region us-east-1
      register: cert
    - name: Safe cert details
      set_fact:
        acm_item_cert_arn: "{{ (cert.stdout|from_json).CertificateArn }}"
    - name: Create an Bucket
      s3_bucket:
        name: jmtestpage4
        region: eu-central-1
    - name: Configure bucket as website
      s3_website :
        name: jmtestpage4
        region: eu-central-1
        error_key: index.html
        state: present
    - name: Upload files
      s3_sync:
        bucket: jmtestpage4
        region: eu-central-1
        file_root: ../target/
        permission: public-read
        cache_control: "public, max-age=31536000"
        file_change_strategy: checksum
        mode: push
    - name: obtain all facts for a single ACM certificate
      aws_acm_facts:
        domain_name: "jmtestpage4.jannes.mingram.net"
        region: us-east-1
      register: cert_details
    - name: Details about cert
      debug:
        var: cert_details
    - name: Details about cert-id
      debug:
        msg: "{{ (cert.stdout|from_json).CertificateArn }}"
    - name: Creat DNS entry 1
      uri:
        url: https://dns.api.gandi.net/api/v5/domains/mingram.net/records
        method: POST
        body: "{
             \"rrset_name\": \"{{ cert_details.certificates[0].domain_validation_options[0].resource_record.name }}\",
             \"rrset_type\": \"{{ cert_details.certificates[0].domain_validation_options[0].resource_record.type }}\",
             \"rrset_values\": [\"{{ cert_details.certificates[0].domain_validation_options[0].resource_record.value }}\"],
             \"rrset_ttl\": 3600
             }"
        status_code: 201
        body_format: json
        headers:
          Content-Type: "application/json"
          X-Api-Key: "{{ lookup('env','GANDI') }}"
    - name: Creat DNS entry 2
      uri:
        url: https://dns.api.gandi.net/api/v5/domains/mingram.net/records
        method: POST
        body: "{
             \"rrset_name\": \"{{ cert_details.certificates[0].domain_validation_options[1].resource_record.name }}\",
             \"rrset_type\": \"{{ cert_details.certificates[0].domain_validation_options[1].resource_record.type }}\",
             \"rrset_values\": [\"{{ cert_details.certificates[0].domain_validation_options[1].resource_record.value }}\"],
             \"rrset_ttl\": 3600
             }"
        status_code: 201
        body_format: json
        headers:
          Content-Type: "application/json"
          X-Api-Key: "{{ lookup('env','GANDI') }}"    
